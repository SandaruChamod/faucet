{
  "contractName": "IFaucet",
  "abi": [
    {
      "inputs": [],
      "name": "addFunds",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"addFunds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/IFaucet.sol\":\"IFaucet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/IFaucet.sol\":{\"keccak256\":\"0xb9329c9a213048ed16135c04feddba2fbeba4a253dead08ee9849dcb230b2863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://597850ddb3884f1ec654e9f2eaef474e19b5f156397c892fcec1a1b594726ab7\",\"dweb:/ipfs/QmUDHWSaR9ZnwVvPm39AiuW8aGP5gLnWCRoQN6c1Ud1tha\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\r\npragma solidity >=0.4.22 <0.9.0;\r\n\r\n// they cannot inherite from other smart contracts\r\n// only inherite from other interfaces\r\n\r\n// no constructors\r\n// cannot declare state variables\r\n// all declared functions should be external \r\n\r\ninterface IFaucet {\r\n    function addFunds() external payable;\r\n    function withdraw(uint256 withdrawAmount) external;\r\n}",
  "sourcePath": "D:\\Edu\\IIT\\Y5\\FYP\\Blockchain\\Practice\\faucet\\contracts\\IFaucet.sol",
  "ast": {
    "absolutePath": "project:/contracts/IFaucet.sol",
    "exportedSymbols": {
      "IFaucet": [
        181
      ]
    },
    "id": 182,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 172,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:2"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IFaucet",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 181,
        "linearizedBaseContracts": [
          181
        ],
        "name": "IFaucet",
        "nameLocation": "277:7:2",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "a26759cb",
            "id": 175,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "addFunds",
            "nameLocation": "301:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 173,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "309:2:2"
            },
            "returnParameters": {
              "id": 174,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "328:0:2"
            },
            "scope": 181,
            "src": "292:37:2",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "2e1a7d4d",
            "id": 180,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "344:8:2",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 178,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 177,
                  "mutability": "mutable",
                  "name": "withdrawAmount",
                  "nameLocation": "361:14:2",
                  "nodeType": "VariableDeclaration",
                  "scope": 180,
                  "src": "353:22:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "353:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "352:24:2"
            },
            "returnParameters": {
              "id": 179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "385:0:2"
            },
            "scope": 181,
            "src": "335:51:2",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 182,
        "src": "267:122:2",
        "usedErrors": []
      }
    ],
    "src": "33:356:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.8",
  "updatedAt": "2022-09-05T17:19:34.084Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}